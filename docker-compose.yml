version: '3.7'

volumes:
  database: {}
  storage: {}
#  middle_var: {}
#  historical_var: {}
#  broker_var: {}
#  coordinator_var: {}
#  router_var: {}

services:
  postgres:
    image: postgres:9.6
    environment:
      - POSTGRES_USER=airflow
      - POSTGRES_PASSWORD=airflow
      - POSTGRES_DB=airflow
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - database:/var/lib/postgresql/data/pgdata

  webserver:
    image: coronavirus-airflow:1.10.9
    build:
      context: ./airflow
      args:
        AIRFLOW_DEPS: "druid"
    restart: always
    depends_on:
      - postgres
    environment:
      - LOAD_EX=n
      - EXECUTOR=Local
      - PYTHONDONTWRITEBYTECODE=y
      - AIRFLOW__CORE__MAX_ACTIVE_RUNS_PER_DAG=1
      - FERNET_KEY=46BKJoQYlPPOexq0OhDZnIlNepKFf87WFwLbfzqDDho=
    volumes:
      - ./airflow/dags:/usr/local/airflow/dags
      - ./airflow/plugins:/usr/local/airflow/plugins
      - ./spark:/opt/coronavirus-spark
      - ./.filesystem:/tmp/filesystem
    ports:
      - "8080:8080"
    command: webserver
    healthcheck:
      test: ["CMD-SHELL", "[ -f /usr/local/airflow/airflow-webserver.pid ]"]
      interval: 30s
      timeout: 30s
      retries: 3

  druid:
    image: druid:0.17.1
    build:
      context: ./druid
    volumes:
      - storage:/var/druid/segments
      - ./.filesystem:/tmp/filesystem
    ports:
      - "8081:8081"
      - "8082:8082"
      - "8888:8888"

  turnilo:
    image: turnilo:1.23.2
    build:
      context: ./turnilo
    environment:
      - DRUID_HOST=http://druid:8082
    ports:
      - "9090:9090"

#  zookeeper:
#    container_name: zookeeper
#    image: zookeeper:3.5
#    environment:
#      - ZOO_MY_ID=1
#
#  coordinator:
#    image: apache/druid:0.17.0
#    container_name: coordinator
#    volumes:
#      - ./filesystem/segments:/opt/data
#      - coordinator_var:/opt/druid/var
#    depends_on:
#      - zookeeper
#      - postgres
#    ports:
#      - "8081:8081"
#    command:
#      - coordinator
#    env_file:
#      - druid/environment
#
#  broker:
#    image: apache/druid:0.17.0
#    container_name: broker
#    volumes:
#      - broker_var:/opt/druid/var
#    depends_on:
#      - zookeeper
#      - postgres
#      - coordinator
#    ports:
#      - "8082:8082"
#    command:
#      - broker
#    env_file:
#      - druid/environment
#
#  historical:
#    image: apache/druid:0.17.0
#    container_name: historical
#    volumes:
#      - ./filesystem/segments:/opt/data
#      - historical_var:/opt/druid/var
#    depends_on:
#      - zookeeper
#      - postgres
#      - coordinator
#    ports:
#      - "8083:8083"
#    command:
#      - historical
#    env_file:
#      - druid/environment
#
#  middlemanager:
#    image: apache/druid:0.17.0
#    container_name: middlemanager
#    volumes:
#      - ./filesystem/segments:/opt/data
#      - middle_var:/opt/druid/var
#    depends_on:
#      - zookeeper
#      - postgres
#      - coordinator
#    ports:
#      - "8091:8091"
#    command:
#      - middleManager
#    env_file:
#      - druid/environment
#
#  router:
#    image: apache/druid:0.17.0
#    container_name: router
#    volumes:
#      - router_var:/opt/druid/var
#    depends_on:
#      - zookeeper
#      - postgres
#      - coordinator
#    ports:
#      - "8888:8888"
#    command:
#      - router
#    env_file:
#      - druid/environment
